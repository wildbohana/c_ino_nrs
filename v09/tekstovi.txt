Zadatak 1: 

Neka je dat tip podatka izraz (definisan dole) u fajlu izraz.h, kao i bafer koji sadrži niz izraza A. 
Podaci se smeštaju u pack(4) sistemu. Bafer je moguće napraviti funkcijom napraviNiz(). 

Na početku bafera, nalazi se ukupan broj izraza N tipa integer, a zatim sledi N izraza.

Napisati funkciju izracunaj() koja čita podatke iz bafera direktnim pristupom baferu, 
izračunava svaki izraz (4 osnovne operacije, deljenje je celobrojno) i rezultat smešta nazad u bafer. 
Dati niz ispisati sa funkcijom ispisiNiz().

Napraviti funkciju izdvoj() koja sve rezultate izraza vraca u obliku liste. 
Definicija kružne liste data je u modulu lista (lista.h+lista.c).
Sve rezultate izraza smestiti u listu u big endian formatu.
Ispisati sve rezultate iz liste na ekran.

typedef struct {
	short broj1;
	char op;
	short broj2;
	int rezultat;
} izraz;

----------------------------------------------------------------------

Zadatak 2: 

Neka je dat tip podatka ispit koji predstavlja podatke o polaganju ispita i koji je definisan u fajlu ispit.h. 
Napisati program koji učitava podatke tipa ispit o polaganju ispita za N studenata iz M predmeta i smešta ih u bafer, 
tako što na početak prvo stavi brojeve N i M tipa int, a zatim i sve podatke u pack(4) sistemu, koristeći direktan pristup baferu.
Podatke ispisati funkcijom ispisiPodatke(). 

Dodatno:
- šifru ispitnog roka učitavati kao string u osnovi 16. 
  U slučaju pogrešnog unosa, zatražiti ponovno učitavanje šifre. 
  Pod pogrešnim unosom se smatra unos pogrešnog znaka
- Napisati funkciju prebroj() koja prima bafer i funkciju f koja za jedan ispit vraća vrednost true/false i koja 
  broji za koliko ispita je zadovoljen uslov dat funkciom f. 
  Prebrojati sve ispite sa ocenom većom od 6.

typedef struct {
	short dan, mesec, godina;
	char ocena;
	int sifraIspRok;
	char profesor[30];
} ispit;
